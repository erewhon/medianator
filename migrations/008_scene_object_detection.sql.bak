-- Scene detection for videos
CREATE TABLE IF NOT EXISTS video_scenes (
    id TEXT PRIMARY KEY DEFAULT (lower(hex(randomblob(16)))),
    media_file_id TEXT NOT NULL,
    scene_number INTEGER NOT NULL,
    start_time REAL NOT NULL,
    end_time REAL NOT NULL,
    start_frame INTEGER NOT NULL,
    end_frame INTEGER NOT NULL,
    duration REAL NOT NULL,
    keyframe_path TEXT,
    confidence REAL DEFAULT 0.0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (media_file_id) REFERENCES media_files(id) ON DELETE CASCADE,
    UNIQUE(media_file_id, scene_number)
);

-- Object detection results
CREATE TABLE IF NOT EXISTS detected_objects (
    id TEXT PRIMARY KEY DEFAULT (lower(hex(randomblob(16)))),
    media_file_id TEXT NOT NULL,
    class_name TEXT NOT NULL,
    confidence REAL NOT NULL,
    bbox_x REAL NOT NULL,
    bbox_y REAL NOT NULL,
    bbox_width REAL NOT NULL,
    bbox_height REAL NOT NULL,
    attributes TEXT, -- JSON string of additional attributes
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (media_file_id) REFERENCES media_files(id) ON DELETE CASCADE
);

-- Photo classifications
CREATE TABLE IF NOT EXISTS photo_classifications (
    id TEXT PRIMARY KEY DEFAULT (lower(hex(randomblob(16)))),
    media_file_id TEXT NOT NULL,
    primary_category TEXT NOT NULL,
    categories TEXT NOT NULL, -- JSON array of categories with confidence scores
    tags TEXT, -- JSON array of tags
    scene_type TEXT,
    is_screenshot BOOLEAN DEFAULT 0,
    is_document BOOLEAN DEFAULT 0,
    has_text BOOLEAN DEFAULT 0,
    dominant_colors TEXT, -- JSON array of hex colors
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (media_file_id) REFERENCES media_files(id) ON DELETE CASCADE,
    UNIQUE(media_file_id)
);

-- Auto-generated albums based on content
CREATE TABLE IF NOT EXISTS auto_albums (
    id TEXT PRIMARY KEY DEFAULT (lower(hex(randomblob(16)))),
    album_name TEXT NOT NULL,
    album_type TEXT NOT NULL, -- 'category', 'scene', 'event', 'location', etc.
    criteria TEXT NOT NULL, -- JSON criteria for album membership
    media_count INTEGER DEFAULT 0,
    cover_media_id TEXT,
    is_active BOOLEAN DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(album_name)
);

-- Association table for auto albums
CREATE TABLE IF NOT EXISTS auto_album_media (
    album_id TEXT NOT NULL,
    media_file_id TEXT NOT NULL,
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    confidence REAL DEFAULT 1.0,
    PRIMARY KEY (album_id, media_file_id),
    FOREIGN KEY (album_id) REFERENCES auto_albums(id) ON DELETE CASCADE,
    FOREIGN KEY (media_file_id) REFERENCES media_files(id) ON DELETE CASCADE
);

-- Indexes for performance
CREATE INDEX IF NOT EXISTS idx_video_scenes_media ON video_scenes(media_file_id);
CREATE INDEX IF NOT EXISTS idx_detected_objects_media ON detected_objects(media_file_id);
CREATE INDEX IF NOT EXISTS idx_detected_objects_class ON detected_objects(class_name);
CREATE INDEX IF NOT EXISTS idx_photo_classifications_media ON photo_classifications(media_file_id);
CREATE INDEX IF NOT EXISTS idx_photo_classifications_category ON photo_classifications(primary_category);
CREATE INDEX IF NOT EXISTS idx_auto_album_media_album ON auto_album_media(album_id);
CREATE INDEX IF NOT EXISTS idx_auto_album_media_file ON auto_album_media(media_file_id);

-- Update media_files table to track processing status
-- Note: These columns may already exist from a previous migration attempt
-- SQLite doesn't support IF NOT EXISTS for ALTER TABLE, so we'll handle this differently